
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.12.1
 * Query Engine version: 473ed3124229e22d881cb7addf559799debae1ab
 */
Prisma.prismaVersion = {
  client: "5.12.1",
  engine: "473ed3124229e22d881cb7addf559799debae1ab"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountScalarFieldEnum = {
  ID: 'ID',
  EMAIL: 'EMAIL',
  PASSWORD: 'PASSWORD',
  ROLE: 'ROLE',
  company_id: 'company_id'
};

exports.Prisma.CompanyScalarFieldEnum = {
  ID: 'ID',
  BANKACCOUNTNR: 'BANKACCOUNTNR',
  CUSTOMERSTART: 'CUSTOMERSTART',
  ISACTIVE: 'ISACTIVE',
  LOGO: 'LOGO',
  NAME: 'NAME',
  SECTOR: 'SECTOR',
  VATNUMBER: 'VATNUMBER',
  CITY: 'CITY',
  COUNTRY: 'COUNTRY',
  NUMBER: 'NUMBER',
  STREET: 'STREET',
  ZIPCODE: 'ZIPCODE',
  EMAIL: 'EMAIL',
  PHONENUMBER: 'PHONENUMBER'
};

exports.Prisma.Company_known_companiesScalarFieldEnum = {
  company_id: 'company_id',
  known_company_id: 'known_company_id'
};

exports.Prisma.Company_paymentoptionsScalarFieldEnum = {
  Company_ID: 'Company_ID',
  PAYMENTOPTIONS: 'PAYMENTOPTIONS'
};

exports.Prisma.Company_update_requestsScalarFieldEnum = {
  ID: 'ID',
  NEWBANKACCOUNTNR: 'NEWBANKACCOUNTNR',
  NEWCUSTOMEREMAIL: 'NEWCUSTOMEREMAIL',
  NEWCUSTOMERPASSWORD: 'NEWCUSTOMERPASSWORD',
  NEWCUSTOMERSTART: 'NEWCUSTOMERSTART',
  NEWLOGO: 'NEWLOGO',
  NEWNAME: 'NEWNAME',
  NEWSECTOR: 'NEWSECTOR',
  NEWSUPPLIEREMAIL: 'NEWSUPPLIEREMAIL',
  NEWSUPPLIERPASSWORD: 'NEWSUPPLIERPASSWORD',
  NEWVATNUMBER: 'NEWVATNUMBER',
  OLDVATNUMBER: 'OLDVATNUMBER',
  REQUESTDATE: 'REQUESTDATE',
  CITY: 'CITY',
  COUNTRY: 'COUNTRY',
  NUMBER: 'NUMBER',
  STREET: 'STREET',
  ZIPCODE: 'ZIPCODE',
  EMAIL: 'EMAIL',
  PHONENUMBER: 'PHONENUMBER'
};

exports.Prisma.Companyupdaterequest_newpaymentoptionsScalarFieldEnum = {
  CompanyUpdateRequest_ID: 'CompanyUpdateRequest_ID',
  NEWPAYMENTOPTIONS: 'NEWPAYMENTOPTIONS'
};

exports.Prisma.Order_tableScalarFieldEnum = {
  ID: 'ID',
  CURRENCY: 'CURRENCY',
  DATE: 'DATE',
  LASTPAYMENTREMINDER: 'LASTPAYMENTREMINDER',
  NAME: 'NAME',
  NETAMOUNT: 'NETAMOUNT',
  ORDERDATETIME: 'ORDERDATETIME',
  ORDERID: 'ORDERID',
  ORDERREFERENCE: 'ORDERREFERENCE',
  ORDERSTATUS: 'ORDERSTATUS',
  PAYMENTSTATUS: 'PAYMENTSTATUS',
  TAXAMOUNT: 'TAXAMOUNT',
  TOTALAMOUNT: 'TOTALAMOUNT',
  FROMCOMPANY_ID: 'FROMCOMPANY_ID',
  TOCOMPANY_ID: 'TOCOMPANY_ID'
};

exports.Prisma.OrderitemScalarFieldEnum = {
  ID: 'ID',
  INSTOCK: 'INSTOCK',
  NAME: 'NAME',
  ORDERID: 'ORDERID',
  ORDERITEMID: 'ORDERITEMID',
  QUANTITY: 'QUANTITY',
  SYNCID: 'SYNCID',
  TOTAL: 'TOTAL',
  UNITOFMEASUREID: 'UNITOFMEASUREID',
  UNITPRICE: 'UNITPRICE',
  FROMORDER_ID: 'FROMORDER_ID',
  PRODUCT_ID: 'PRODUCT_ID'
};

exports.Prisma.ProductScalarFieldEnum = {
  ID: 'ID',
  DESCRIPTION: 'DESCRIPTION',
  NAME: 'NAME',
  PRICE: 'PRICE',
  PRODUCTAVAILABILITY: 'PRODUCTAVAILABILITY',
  PRODUCTCATEGORYID: 'PRODUCTCATEGORYID',
  PRODUCTID: 'PRODUCTID',
  PRODUCTUNITOFMEASUREID: 'PRODUCTUNITOFMEASUREID',
  SYNCID: 'SYNCID',
  FROMCOMPANY_ID: 'FROMCOMPANY_ID'
};

exports.Prisma.NotificationScalarFieldEnum = {
  ID: 'ID',
  DATE: 'DATE',
  NOTIFICATIONSTATUS: 'NOTIFICATIONSTATUS',
  NOTIFICATIONTYPE: 'NOTIFICATIONTYPE',
  ORDERID: 'ORDERID',
  TEXT: 'TEXT',
  COMPANYID: 'COMPANYID'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  account: 'account',
  company: 'company',
  company_known_companies: 'company_known_companies',
  company_paymentoptions: 'company_paymentoptions',
  company_update_requests: 'company_update_requests',
  companyupdaterequest_newpaymentoptions: 'companyupdaterequest_newpaymentoptions',
  order_table: 'order_table',
  orderitem: 'orderitem',
  product: 'product',
  notification: 'notification'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
